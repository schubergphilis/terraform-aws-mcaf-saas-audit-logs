name: Build and Package Lambda(s)

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
      - master
    paths:
      - lambdas/**

permissions:
  contents: write
  pull-requests: write

env:
  LAMBDA_DIR: "lambdas"

jobs:
  pkg:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.13"]
        lambda-name: ["gitlab", "okta", "terraform-cloud"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          cd $LAMBDA_DIR/${{ matrix.lambda-name }}/src
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create Lambda deployment package
        run: |
          mkdir -p $LAMBDA_DIR/${{ matrix.lambda-name }}/pkg

          # Navigate to site-packages
          cd $LAMBDA_DIR/${{ matrix.lambda-name }}/src/venv/lib/python${{ matrix.python-version }}/site-packages

          # Package the lambda function. Package the dependencies and then add the source code to the created zip to ensure a flat archive structure.
          zip -r ../../../../../../../$LAMBDA_DIR/${{ matrix.lambda-name }}/pkg/lambda.zip .
          cd ../../../../../../../$LAMBDA_DIR/${{ matrix.lambda-name }}/src
          zip ../pkg/lambda.zip main.py requirements.txt

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: lambda_${{ matrix.lambda-name }}_python${{ matrix.python-version }}.zip
          path: lambdas/${{ matrix.lambda-name }}/pkg/lambda.zip

  # Download all artifacts and commit them to the repository. This seperate job prevents a push to the repository per zip file due to the matrix.
  push:
    runs-on: ubuntu-latest
    needs: pkg

    strategy:
      matrix:
        python-version: ["3.13"]
        lambda-name: ["gitlab", "okta", "terraform-cloud"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Remove old pkg artifacts
        run: rm -rf lambdas/${{ matrix.lambda-name }}/pkg/

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: lambdas/${{ matrix.lambda-name }}/pkg/
          merge-multiple: true

      - name: Commit deployment packages
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Add all Lambda deployment packages"
          file_pattern: "lambdas/*/pkg/*.zip"